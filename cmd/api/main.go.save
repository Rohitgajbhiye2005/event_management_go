package main

import (
	"database/sql"
	"log"
	"rest-api/internal/database"
	"rest-api/internal/env"
	_ "github.com/joho/godotenv/autoload"
	_ "github.com/mattn/go-sqlite3"
)

type application struct{
	port int
	jwtSecret string
	model database.Models
}

func main(){
	db,err:=sql.Open("sqlite3","./data.db")
	db, err := sql.Open("sqlite3", "./data.db")
if err != nil {
    log.Fatal(err)
}

// ADD THESE DEBUG LINES:
fmt.Printf("DEBUG: Database connection opened\n")
fmt.Printf("DEBUG: Database file: ./data.db\n")

// Test the connection and check if users table exists
var tableName string
err = db.QueryRow("SELECT name FROM sqlite_master WHERE type='table' AND name='users'").Scan(&tableName)
if err != nil {
    fmt.Printf("DEBUG: ERROR - Users table not found: %v\n", err)
} else {
    fmt.Printf("DEBUG: SUCCESS - Users table exists: %s\n", tableName)
}
	if err!=nil{
		log.Fatal(err)
	}
	defer db.Close()

	models:=database.NewModels(db)

	app:=&application{
		port: env.GetEnvInt("PORT",3030),
		jwtSecret: env.GetEnvString("JWT_SECRET","some-secret1234"),
		model: models,
	}
	if err:=app.Serve();err!=nil{
		log.Fatal(err)
	}
}
